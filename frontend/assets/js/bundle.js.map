{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;AAAa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB,GAAG,wBAAwB,GAAG,yBAAyB,GAAG,uBAAuB;AACzG,uBAAuB;AACvB,yBAAyB;AACzB,wBAAwB;AACxB,wBAAwB;;;;;;;UCNxB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;ACtBa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB,mBAAO,CAAC,qCAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,+BAA+B;AACnE;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,sBAAsB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,IAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","sources":["webpack://test-vite/./src/selected.ts","webpack://test-vite/webpack/bootstrap","webpack://test-vite/./src/index.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.valueGrossWeight = exports.valueMarketPrice = exports.valueMarketWeight = exports.valueIngredient = void 0;\nexports.valueIngredient = String(document.querySelector('#ingredients'));\nexports.valueMarketWeight = Number(document.querySelector('#ingredients'));\nexports.valueMarketPrice = Number(document.querySelector('#ingredients'));\nexports.valueGrossWeight = Number(document.querySelector('#ingredients'));\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst selected_1 = require(\"./selected\");\n(function () {\n    const temporaryObj = {\n        valueTot: 0,\n        valueUnit: 0,\n        valueGF: 0\n    };\n    document.addEventListener('click', function (event) {\n        const el = event.target;\n        if (el.classList.contains('btnAdd')) {\n            const food = new Food(selected_1.valueIngredient, selected_1.valueMarketWeight, selected_1.valueMarketPrice, selected_1.valueGrossWeight);\n            food.addFood();\n        }\n    });\n    document.addEventListener('input', function (event) {\n        const el = event.target;\n        if (el.classList.contains('inputUnit') ||\n            el.classList.contains('inputPacket')) {\n            addCustoUni();\n        }\n        if (el.classList.contains('rangeLucro')) {\n            addValorFinal();\n        }\n        if (el.classList.contains('rangeDiasDeTrabalho') ||\n            el.classList.contains('inputVendasPorDias') ||\n            el.classList.contains('inputGastosFixos')) {\n            addCustosFixos();\n        }\n    });\n    document.addEventListener('keydown', function (event) {\n        const inputs = document.querySelectorAll('#foodTable input');\n        if (event.key === 'Enter' &&\n            Array.from(inputs).includes(document.activeElement)) {\n            const food = new Food(selected_1.valueIngredient, selected_1.valueMarketWeight, selected_1.valueMarketPrice, selected_1.valueGrossWeight);\n            food.addFood();\n        }\n    });\n    class Food {\n        constructor(ingredients, marketWeight, marketPrice, grossWeight) {\n            this.ingredients = ingredients;\n            this.marketWeight = marketWeight;\n            this.marketPrice = marketPrice;\n            this.grossWeight = grossWeight;\n        }\n        addFood() {\n            if (!Food.validInputs())\n                return;\n            const table = selectElement('#foodTable');\n            const newRow = table.insertRow(2);\n            const cell1 = newRow.insertCell(0);\n            cell1.innerHTML = this.ingredients;\n            const cell2 = newRow.insertCell(1);\n            cell2.innerHTML = this.marketWeight;\n            const cell3 = newRow.insertCell(2);\n            cell3.innerHTML = `R$ ${formatNumber(this.marketPrice)}`;\n            const cell4 = newRow.insertCell(3);\n            cell4.innerHTML = this.grossWeight;\n            const cell5 = newRow.insertCell(4);\n            const costUni = this.costReal();\n            temporaryObj.valueTot += costUni;\n            cell5.setAttribute('class', 'thResult');\n            cell5.innerHTML = `R$ ${formatNumber(costUni)}`;\n            const cell6 = newRow.insertCell(5);\n            const btnEdit = Food.createButtonElement(1);\n            cell6.appendChild(btnEdit);\n            this.addCostTot();\n            addCustoUni();\n            Food.clearInputs();\n        }\n        costReal() {\n            return (this.marketPrice / this.marketWeight) * this.grossWeight;\n        }\n        addCostTot() {\n            const div = selectElement('#custoTot');\n            const tot = formatNumber(temporaryObj.valueTot);\n            div.innerHTML = `R$ ${tot}`;\n        }\n        static validInputs() {\n            for (const input of document.querySelectorAll('.inputForm')) {\n                if (!input.value) {\n                    alert('Preencha os dados corretamente.');\n                    input.focus();\n                    return false;\n                }\n            }\n            return true;\n        }\n        static createButtonElement(el) {\n            if (el === 1) {\n                const btn = document.createElement('button');\n                btn.setAttribute('id', 'btnEdit');\n                btn.setAttribute('onclick', 'editElement(this)');\n                btn.innerHTML = `<span class=\"material-icons\">\r\n        edit\r\n        </span>`;\n                return btn;\n            }\n            if (el === 2) {\n                const btn = document.createElement('button');\n                btn.setAttribute('id', 'btnDelete');\n                /* btnEdit.setAttribute(\"onclick\", \"editElement()\"); */\n                btn.innerHTML += `<span class=\"material-icons\">\r\n        delete\r\n        </span>`;\n                return btn;\n            }\n        }\n        static clearInputs() {\n            for (const input of document.querySelectorAll('.inputForm')) {\n                input.value = '';\n            }\n            selectElement('#ingredients').focus();\n        }\n    }\n    const addCustoUni = () => addValue(custoUni, '#divCostUnit');\n    const addCustosFixos = () => addValue(valorGastosFixo, '#divCustoFixo');\n    const addValorFinal = () => addValue(valorFinal, '#divLucro');\n    const addValue = (calcFunction, selector) => {\n        const value = calcFunction();\n        setResultInDiv(selector, value);\n    };\n    const setResultInDiv = (selector, value) => {\n        const div = selectElement(selector);\n        div.innerHTML = value;\n    };\n    const custoUni = () => {\n        const unitValue = getValueInput('#inputUnit', Number);\n        const packetValue = getValueInput('#packetValue', Number);\n        if (!unitValue || !temporaryObj.valueTot)\n            return 'R$ 0,00';\n        const result = temporaryObj.valueTot / unitValue + packetValue;\n        temporaryObj.valueUnit = result;\n        return formatNumber(result);\n    };\n    const valorGastosFixo = () => {\n        const diasTrabalhados = getValueInput('#rangeDiasDeTrabalho', Number);\n        const vendasPorDia = getValueInput('#inputVendasPorDia', Number);\n        const gastosFixos = getValueInput('#inputGastosFixos', Number);\n        if (!vendasPorDia || !gastosFixos)\n            return '0,00';\n        const result = gastosFixos / (diasTrabalhados * 4 * vendasPorDia);\n        temporaryObj.valueGF = result;\n        return formatNumber(result);\n    };\n    const valorFinal = () => {\n        const rangeValue = getValueInput('#rangeLucro', Number);\n        const valorFinalProduto = temporaryObj.valueUnit + temporaryObj.valueGF;\n        const resultFinal = valorFinalProduto + valorFinalProduto * (rangeValue / 100);\n        return formatNumber(resultFinal);\n    };\n    const selectElement = (selector) => document.querySelector(selector);\n    const getValueInput = (selector, type) => type(document.querySelector(selector).value);\n    const formatNumber = (value) => value.toFixed(2).replace('.', ',');\n})();\n"],"names":[],"sourceRoot":""}